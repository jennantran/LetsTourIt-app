{"version":3,"sources":["HomePage/images/compass.jpg","HomePage/HomePage.js","config.js","services/token-service.js","FavoritesContext.js","Nav.js","Footer.js","Place.js","SearchBox/SearchBox.js","SearchBar/SearchBar.js","Map.js","Maps.js","SearchPage.js","auth/ValidationError.js","auth/Login.js","Favorite.js","FavoritedList.js","auth/SignUp.js","services/auth-api-service.js","App.js","index.js"],"names":["module","exports","HomePage","e","this","props","history","push","className","src","require","alt","onClick","handleClick","Component","withRouter","TokenService","saveAuthToken","token","window","localStorage","setItem","config","console","log","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","FavoritesContext","React","createContext","favorites","addFavorite","deleteFavorite","handlePostAuthenticate","handleLogoutClick","clearFavorites","user_id","Nav","state","setState","authToken","undefined","context","to","renderLogoutLink","renderLoginLink","contextType","Footer","Place","id","name","rating","address","SearchBox","updateLocation","navigator","geolocation","getCurrentPosition","pos","coords","currentLocation","lat","latitude","lng","longitude","updateSearch","search","updateRadius","selectedValue","checkboxToggle","openNowCheck","favoriteToggle","fave","currentTarget","parentNode","favedetails","children","faveObject","textContent","trim","fetch","process","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","data","catch","error","handleSubmit","event","preventDefault","url","radius","location","API","baseUrl","params","query","join","response","results","err","places","map","resultItem","key","formatted_address","onSubmit","required","type","placeholder","onChange","target","value","SearchBar","mapStyles","position","width","height","CurrentLocation","initialCenter","prevProps","prevState","google","loadMap","recenterMap","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","mapRef","refs","node","ReactDOM","findDOMNode","zoom","mapConfig","Object","assign","Map","Children","c","cloneElement","mapCenter","style","ref","renderChildren","defaultProps","visible","MapContainer","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","onClose","GoogleApiWrapper","apiKey","SearchPage","ValidationError","message","Login","username","touched","length","userError","validateUser","passwordError","validatePassword","updateUser","updatePassword","Favorite","FavoritedList","handleDelete","deleteItem","deleteObject","favorite","SignUp","handleRegistrationRedirect","newUser","addUser","alert","match","validateUsername","AuthApiService","postLogin","credentials","App","responseJson","success","Error","setTimeout","place","filter","p","contextValue","Provider","exact","path","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.c12cd31b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/compass.a050b103.jpg\";","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'; \nimport './HomePage.css';\n\n class HomePage extends Component {\n    handleClick(e) {\n        this.props.history.push('/signUp')\n    }\n     \n    render(){\n        return(\n            <div className='homePage'>\n                <section className='homePageSect'>\n                    <div>\n                        <img className='compass' src={require('./images/compass.jpg')} alt='bay-bridge'/>   \n                    </div>\n                    <div className='header'>\n                        <h1>Let the Exploring Begin</h1>\n                        <p><em>Don't know what to do? </em></p>\n                        <p><em>Search for things to do and things to eat. </em></p>\n                        <button onClick={e => this.handleClick(e)}>Sign Up</button>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(HomePage);","export default {\n    API_ENDPOINT: `https://young-citadel-05531.herokuapp.com/`,\n    TOKEN_KEY: 'tour-client-auth-token',    \n  }","import config from '../config'\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n    console.log(window.localStorage);\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  makeBasicAuthToken(userName, password) {\n    return window.btoa(`${userName}:${password}`)\n  },\n}\n\nexport default TokenService\n","import React from 'react'\n\nconst FavoritesContext = React.createContext({\n    favorites: [],\n    addFavorite: () => {},\n    deleteFavorite: () => {},\n    handlePostAuthenticate: () => {},\n    handleLogoutClick: () => {},\n    clearFavorites: () => {},\n    user_id: '',\n});\n\nexport default FavoritesContext;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Nav.css';\nimport TokenService from './services/token-service';\nimport FavoritesContext from './FavoritesContext';\n\nclass Nav extends Component {\n  static contextType = FavoritesContext;\n  constructor(props){\n    super(props);\n    this.state = {\n      authToken: undefined,\n    }\n  }\n    handleLogoutClick = () => {\n        TokenService.clearAuthToken();\n        console.log(this.state);\n        this.setState({authToken: undefined})\n        this.context.clearFavorites();\n        \n    }\n  \n    renderLogoutLink() {\n      return (\n        <li className='loggedIn'>\n          <Link\n            onClick={this.handleLogoutClick}\n            to='/login'>\n            Logout\n          </Link>\n        </li>\n      )\n    }\n  \n    renderLoginLink() {\n      return (\n        <li className='notLogged-in'>\n          <Link\n            to='/login'>\n            Log in\n          </Link>\n        </li>\n      )\n    }\n    render(){\n        return(\n            <section className='nav'>\n                <h2>JustTourIt.</h2>\n                <ul> \n                    <li><Link to='/'>Home</Link></li>\n                    <li><Link to='/search'>Search </Link></li>\n                    <li><Link to='/favorites'>Favorites</Link></li>\n                    {TokenService.hasAuthToken()\n                        ? this.renderLogoutLink()\n                        : this.renderLoginLink()}\n                </ul>\n            </section>\n        );\n    }\n}\n\nexport default Nav; ","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className='Footer'>\n        <p>©Jennifer Tran, 2020. All Rights Reserved.</p>\n      </footer>\n    )\n  }\n}","import React, { Component } from 'react'\n\nclass Place extends Component{\n    render(){               \n        return (\n            <div className='Place' id={this.props.id}>\n                <h2 id='name'> {this.props.name + ' '} </h2>\n                <p id='rating'>{this.props.rating}</p> \n                    <p id='address'>{this.props.address} </p>\n                    <i className=\"fas fa-heart\"\n                        onClick={this.props.onClick}\n                    ></i>\n            </div>\n\n        )\n        }\n    }\nexport default Place;","import React, { Component } from 'react';\nimport './SearchBox.css';\nimport Place from '../Place';\nimport FavoritesContext from '../FavoritesContext';\nimport TokenService from '../services/token-service'\n\nclass SearchBox extends Component {\n  static contextType = FavoritesContext;\n    constructor(props){\n      super(props);\n      this.state = {\n        search: '',\n        results: [],\n        selectedValue: '5',\n        openNowCheck: false,\n        user_id: '',\n        currentLocation: {\n          lat: '',\n          lng: ''\n        },\n      }\n  }\n\n  updateLocation = () => {\n    if (navigator && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n            }\n          });\n      });\n      }\n  }\n\n  updateSearch = (search) => {\n    this.setState({\n      search: search\n    })\n  }\n\n  updateRadius = (selectedValue) => {\n    this.setState({\n      selectedValue: selectedValue\n    })\n  }\n\n  checkboxToggle = () =>  {\n      this.setState({\n        openNowCheck: !this.state.openNowCheck\n      })\n  }\n\n \n  favoriteToggle = (e) => {\n    const fave = e.currentTarget.parentNode;\n    const favedetails = e.currentTarget.parentNode.children;\n\n    const faveObject = {\n            'id': fave.id,\n            'name': favedetails.name.textContent.trim(),\n            'rating': favedetails.rating.textContent,\n            'address': favedetails.address.textContent,\n            'user_id': this.context.user_id,\n    }\n\n    fetch(`${process.env.REACT_APP_SERVER_URL}/favorites/${faveObject.id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify({faveObject}),\n    })\n    .then((res) => {\n      if(!res.ok){\n          return res.json().then(e => Promise.reject(e))\n      }\n      return res.json()\n    })\n    .then((data) => {\n        this.context.addFavorite(data);\n    })\n    .catch(error => {\n        console.error(error);\n    });  \n\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const openNowCheck = this.state.openNowCheck;\n    const selectedValue = this.state.selectedValue;\n    const lat = this.state.currentLocation.lat;\n    const lng = this.state.currentLocation.lng;\n    const radius = `&radius=${selectedValue}`;\n    const location =`&location=${lat},${lng}`;\n    const open = `&opennow`;\n    const API = '&key=AIzaSyBoLFRF2RY7_h5pL0k4Yo96Q5XI9ivlAAw';\n\n    const baseUrl = 'https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/textsearch/json?query=';\n    const params = [];\n    let url;\n\n    if(this.state.search){\n      params.push(`search=${this.state.search}`)\n    }\n    if(radius){\n      params.push(`radius=${selectedValue}`)\n    }\n    if(location){\n      params.push(`location=${lat},${lng}`)\n    }\n    if(!openNowCheck){\n       url =baseUrl + radius + location +  API;\n    }else{\n        params.push(`${open}`)\n    }\n\n    const query = params.join('&');\n      url = `${baseUrl}?${query}?${API}`;\n    console.log(url)\n\n    return fetch(url)\n      .then(response => response.json())\n      .then(json => {\n         this.setState({\n           results: json.results\n         })\n      })\n      .catch(function(err){\n        console.log('There was an error');\n      })\n    }\n\n    render() {\n      this.updateLocation();\n      const resultList = this.state.results;\n      const places = resultList.map((resultItem) => {\n        return <ul>\n                  <li key={resultItem.id}> \n                      <Place\n                        id={resultItem.id}\n                        name={resultItem.name}\n                        address={resultItem.formatted_address}\n                        rating={resultItem.rating}\n                        onClick={ e => this.favoriteToggle(e)}\n                      />\n                  </li>\n                </ul>\n      })\n      return (\n        <div>\n           <form className='SearchBox'\n                onSubmit = {e => this.handleSubmit(e)}>\n              <input \n                  required\n                  type='text'\n                  name='search'\n                  id='search' \n                  placeholder='Search for places...'\n                  onChange={e => this.updateSearch(e.target.value)}/>\n              <input type='submit'  \n                    className='submit'\n                    />\n                <div className='filterOptions'>\n                      <label className='filter'>\n                      <input \n                          type='checkbox' \n                          value='openNow' \n                          id='filterByHours' \n                          name='filterByHours'\n                          onClick={ (e) => this.checkboxToggle(e.target.value)} \n                          />\n                        Open Now\n                      </label>\n                      <label className='radius'>Search by Radius:</label>\n                      <select \n                          value = {this.state.selectedValue}\n                          onChange={e=> this.updateRadius(e.target.value)}\n                          name='radius' id='radius'>\n                        <option value='1'>1 miles</option>\n                        <option value='5'>5 miles</option>\n                        <option value='10'>10 miles</option>\n                        <option value='20'>20 miles</option>\n                    </select>\n                 </div>\n              </form>   \n            <section id='results'>\n                <h2>Search results</h2>\n                  <ul>\n                    {places}\n                  </ul>\n            </section>\n          </div>\n      );\n    }\n  }\n  \n  export default SearchBox;","import React, { Component } from 'react';\n// import './SearchBar.css';\nimport SearchBox from '../SearchBox/SearchBox';\n\nclass SearchBar extends Component {\n    render(){\n        return(\n                <div className='searchbarControls'>\n                    <SearchBox/>   \n                </div>   \n        );\n    }\n}\nexport default SearchBar;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '40%',\n    height: '40%'\n  }\n};\n\nexport class CurrentLocation extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        const { lat, lng } = this.props.initialCenter;\n        this.state = {\n          currentLocation: {\n            lat: lat,\n            lng: lng\n          }\n        };\n      }  \n\ncomponentDidUpdate(prevProps, prevState) {\nif (prevProps.google !== this.props.google) {\n    this.loadMap();\n}\nif (prevState.currentLocation !== this.state.currentLocation) {\n    this.recenterMap();\n    }\n}\n\nrecenterMap() {\nconst map = this.map;\nconst current = this.state.currentLocation;\n\nconst google = this.props.google;\nconst maps = google.maps;\n\nif (map) {\n    let center = new maps.LatLng(current.lat, current.lng);\n    map.panTo(center);\n    }\n}\n\ncomponentDidMount() {\nif (this.props.centerAroundCurrentLocation) {\n    if (navigator && navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(pos => {\n        const coords = pos.coords;\n        this.setState({\n        currentLocation: {\n            lat: coords.latitude,\n            lng: coords.longitude\n        }\n        });\n    });\n    }\n}\nthis.loadMap();\n}\nloadMap() {\nif (this.props && this.props.google) {\n    // checks if google is available\n    const { google } = this.props;\n    const maps = google.maps;\n\n    const mapRef = this.refs.map;\n\n    // reference to the actual DOM element\n    const node = ReactDOM.findDOMNode(mapRef);\n\n    let { zoom } = this.props;\n    const { lat, lng } = this.state.currentLocation;\n    const center = new maps.LatLng(lat, lng);\n    const mapConfig = Object.assign(\n    {},\n    {\n        center: center,\n        zoom: zoom\n    }\n    );\n\n    // maps.Map() is constructor that instantiates the map\n    this.map = new maps.Map(node, mapConfig);\n    }\n}\nrenderChildren() {\nconst { children } = this.props;\n\nif (!children) return;\n\nreturn React.Children.map(children, c => {\n    if (!c) return;\n    return React.cloneElement(c, {\n    map: this.map,\n    google: this.props.google,\n    mapCenter: this.state.currentLocation\n     });\n    });\n}\n\nrender() {\nconst style = Object.assign({}, mapStyles.map);\nreturn (\n    <div>\n    <div style={style} ref=\"map\">\n        Loading map...\n    </div>\n    {this.renderChildren()}\n    </div>\n    );\n    } \n}\n\nexport default CurrentLocation;\n\nCurrentLocation.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: -1.2884,\n    lng: 36.8233\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","import React, { Component } from \"react\";\nimport { GoogleApiWrapper, Map, InfoWindow, Marker } from 'google-maps-react';\nimport './Maps.css';\nimport CurrentLocation from './Map';\n\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CurrentLocation\n        centerAroundCurrentLocation\n        google={this.props.google}\n      >\n        <Marker onClick={this.onMarkerClick} name={'current location'} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n\nexport default GoogleApiWrapper(\n  (props) => ({\n  apiKey: ('AIzaSyBoLFRF2RY7_h5pL0k4Yo96Q5XI9ivlAAw')\n}))(MapContainer)","import React, { Component } from 'react';\nimport SearchBar from './SearchBar/SearchBar';\nimport Maps from './Maps';\n\n\nclass SearchPage extends Component {\n    render(){\n        return(\n            <div className='searchPage'>\n              <SearchBar/>\n              <Maps/>\n            </div>\n        );\n    }\n}\n\nexport default SearchPage; ","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.message) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","import React, { Component } from 'react';\nimport './Login.css';\nimport ValidationError from './ValidationError';\nimport FavoritesContext from '../FavoritesContext';\n\n\nclass Login extends Component{\n    static contextType = FavoritesContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: {\n            value: '',\n            touched: false\n            },\n            password: {\n            value: '',\n            touched: false\n            },\n        }\n     }\n\n    updateUser(username) {\n        this.setState({username: {value: username, touched: true}});\n        }\n        \n    updatePassword(password) {\n    this.setState({password: {value: password, touched: true}});\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.context.handlePostAuthenticate(this.state);\n        this.props.history.push('/favorites');\n      }\n\n    validateUser() {\n        const username = this.state.username.value.trim();\n        if (username.length === 0) {\n          return \"username is required\";\n        } else if (username.length < 3) {\n          return \"Username must be at least 3 characters long\";\n        }\n      }\n    \n    validatePassword() {\n        const password = this.state.password.value.trim();\n        if (password.length === 0) {\n          return 'Password is required';\n        } else if (password.length < 6 || password.length > 72) {\n          return 'Password must be between 6 and 72 characters long';\n        }\n      }\n\n    render(){\n        const userError = this.validateUser();\n        const passwordError = this.validatePassword();\n        return(\n            <div className='loginForm'>\n                <form className='userForm' onSubmit={ e => this.handleSubmit(e)}>\n                    <h1>Login</h1>\n                    <label>\n                        Username:\n                        <input \n                            type='text' \n                            className='formInput'\n                            name='user'\n                            id='user'\n                            onChange={e => this.updateUser(e.target.value)}/>\n                             {this.state.username.touched && <ValidationError message={userError} />}\n                    </label>\n                    <label>\n                        Password:\n                        <input \n                            type='password' \n                            name='password'\n                            className='formInput'\n                            id='password'\n                            onChange={e => this.updatePassword(e.target.value)}/>\n                                 {this.state.password.touched && \n                                 <ValidationError message={passwordError} /> }\n                    </label>\n                    <input \n                        type='submit' \n                        value='submit' />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React from 'react';\nimport FavoritesContext from './FavoritesContext';\n\nclass Favorite extends React.Component {\n    static contextType = FavoritesContext;\n  \n    render(){\n        return (\n            <div className='favorite' id={this.props.id}>\n                <h2 id='name'>{this.props.name + ' '}</h2>\n                <p id='rating'>{this.props.rating}</p> \n                <p id='address'>{this.props.address} </p>\n                <button className='delete'\n                    onClick={this.props.onClick}>Delete</button>\n            </div>\n        )\n     };\n}\n\nexport default Favorite;","import React, { Component } from 'react';\nimport Favorite from './Favorite';\nimport FavoritesContext from './FavoritesContext';\n\nclass FavoritedList extends Component{\n    state =  {\n        error:  null,\n        favorites:[],\n    }\n\nstatic contextType = FavoritesContext;\n\nhandleDelete = (e) => {\n    const deleteItem= e.currentTarget.parentNode.children;\n    const deleteItemId = e.currentTarget.parentNode.id;\n\n\n    const deleteObject = {\n        'id': deleteItemId,\n        'name': deleteItem.name.textContent.trim(),\n        'rating': deleteItem.rating.textContent,\n        'address': deleteItem.address.textContent,\n        'user_id': this.context.user_id,\n}   \n\nthis.context.deleteFavorite(deleteObject);\n}\n    render(){\n        const { favorites } = this.context\n      \n        return (\n            <section className = 'favList'>\n                <h2>Favorites</h2>\n                <ul className='favoritesList'>\n                    <li key={favorites.id}>\n                        {favorites.map(favorite =>\n                            <Favorite\n                            id={favorite.id}\n                            name={favorite.name}\n                            rating ={favorite.rating}\n                            address= {favorite.address}\n                            onClick={ (e) => this.handleDelete(e)}\n                            />\n                        )}\n                    </li>\n                 </ul>\n            </section>\n        );\n    }\n}\nFavoritedList.defaultProps = {\n    favorites: []\n};\n\nexport default FavoritedList;","import React, { Component } from 'react';\nimport './SignUp.css';\nimport ValidationError from './ValidationError';\nimport { withRouter } from 'react-router-dom'; \nimport FavoritesContext from '../FavoritesContext';\n\nclass SignUp extends Component{\n    static contextType = FavoritesContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: {\n            value: '',\n            touched: false\n            },\n            password: {\n            value: '',\n            touched: false\n            },\n        }\n     }\n\n    handleRegistrationRedirect = () => {\n        const { history } = this.props\n        history.push('/login')\n      }\n\n    updateUser(username) {\n        this.setState({username: {value: username, touched: true}});\n        }\n        \n    updatePassword(password) {\n    this.setState({password: {value: password, touched: true}});\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { username, password } = this.state;\n        const newUser = { username, password }\n        this.context.addUser(newUser);\n        alert('Successful sign up');\n        this.handleRegistrationRedirect();\n\n    }\n    validateUsername() {\n        const username = this.state.username.value.trim();\n        if (username.length === 0) {\n          return \"username is required\";\n        } else if (username.length < 3) {\n          return \"Username must be at least 3 characters long\";\n        }\n      }\n    \n    validatePassword() {\n        const password = this.state.password.value.trim();\n        if (password.length === 0) {\n          return 'Password is required';\n        } else if (password.length < 6 || password.length > 72) {\n          return 'Password must be between 6 and 72 characters long';\n        } else if (!password.match(/[0-9]/)) {\n          return 'Password must contain at least one number';\n        }\n      }\n\n    render(){\n        const userError = this.validateUsername();\n        const passwordError = this.validatePassword();\n        return(\n            <div className='signUpForm'>\n                <form className='userForm' onSubmit={ e => this.handleSubmit(e)}>\n                    <h1>Sign Up</h1>\n                    <label>\n                        User:\n                        <input \n                            type='text' \n                            className='formInput'\n                            name='user'\n                            id='user'\n                            onChange={e => this.updateUser(e.target.value)}/>\n                             {this.state.username.touched && <ValidationError message={userError} />}\n                    </label>\n                    <label>\n                        Password:\n                        <input \n                            type='password' \n                            name='password'\n                            className='formInput'\n                            id='password'\n                            onChange={e => this.updatePassword(e.target.value)}/>\n                                 {this.state.password.touched && \n                                 <ValidationError message={passwordError} /> }\n                    </label>\n                    <input \n                        type='submit' \n                        value='submit' />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(SignUp);","const AuthApiService = {\n  postLogin(credentials) {\n    return fetch(`${process.env.REACT_APP_SERVER_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n}\n\nexport default AuthApiService","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport HomePage from './HomePage/HomePage';\nimport Nav from './Nav';\nimport Footer from './Footer';\nimport SearchPage from './SearchPage';\nimport Login from './auth/Login';\nimport './App.css';\nimport FavoritedList from './FavoritedList';\nimport FavoritesContext from './FavoritesContext';\nimport SignUp from './auth/SignUp';\nimport TokenService from './services/token-service'\nimport AuthApiService from './services/auth-api-service'\n\nclass App extends Component {\n   state = {\n     favorites: [],\n     addFavorite: this.addFavorite,\n     deleteFavorite: this.deleteFavorite,\n     addUser: this.addUser,\n     error: null,\n     user_id: '',\n   }\n  \n  handlePostAuthenticate = ({ username, password, user_id }) => {\n    AuthApiService.postLogin({\n      username: username.value,\n      password: password.value,\n    })\n      .then(res => {\n        TokenService.saveAuthToken(res.authToken)\n        this.setState({\n          user_id: res.user_id\n        })\n        fetch(process.env.REACT_APP_SERVER_URL + `/favorites`, {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `bearer ${TokenService.getAuthToken()}`,\n                \"user_id\": res.user_id\n              },\n            })\n              .then((response) => response.json())\n              .then((responseJson) => {\n                if (responseJson.success && responseJson.success === false) {\n                  throw new Error(\"error in getting favorites\");\n                } else {\n                  console.log(responseJson);\n                  this.setState({\n                    favorites: responseJson,\n                  });\n                }\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n      })\n      .catch(res => {\n        this.setState({ error: res.error })\n      });\n  };\n  addFavorite = favorite => {\n    this.setState({\n      favorites: [...this.state.favorites,favorite]\n    })\n    setTimeout(() => console.log(this.state)); \n  }\n\n  deleteFavorite = (place) => {\n    return fetch(`${process.env.REACT_APP_SERVER_URL}/favorites/${place.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then((res) =>  {\n        console.log(place);\n        this.setState({\n            favorites: this.state.favorites.filter(p=> p.id !== place.id)\n          })\n          return(res);\n       })\n      .catch((error) => {\n        console.error(error);\n        this.setState({ error });\n      });\n  };\n\n  addUser = (username) => {\n    return fetch(`${process.env.REACT_APP_SERVER_URL}/signUp`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({username}),\n    })\n  }\n\n  clearFavorites = () => {\n    this.setState({\n      favorites: [],\n    })\n  }\n\n  render(){\n    const contextValue = {\n      favorites: this.state.favorites,\n      addFavorite: this.addFavorite,\n      deleteFavorite: this.deleteFavorite,\n      handlePostAuthenticate: this.handlePostAuthenticate,\n      clearFavorites: this.clearFavorites,\n      user_id: this.state.user_id,\n      addUser: this.addUser\n    }\n    return (\n      <div className='app'>\n      <FavoritesContext.Provider value={contextValue}>\n        <nav>\n          <Nav/>\n        </nav>\n        <main>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/search' component={SearchPage} />\n          <Route path='/login' component={Login} />\n          <Route path='/signUp' component={SignUp} />\n          <Route path='/favorites' component={FavoritedList} />\n    \n        </main>\n        </FavoritesContext.Provider>\n        <footer>\n          <Footer/>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport FavoritesContext from './FavoritesContext';\n\nReactDOM.render(\n    <BrowserRouter>\n       <FavoritesContext.Provider>\n      <App />\n      </FavoritesContext.Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n  )\n  \n  "],"sourceRoot":""}